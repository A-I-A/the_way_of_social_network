{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPosts.container.jsx","components/Profile/Profile.jsx","components/Profile/Profile.container.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMOde","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","photos","large","alt","Preloader","Post","className","styles","item","avatar","text","maxLength","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","SuperText","name","placeholder","validate","textRequired","MyPosts","postElements","posts","map","post","addNewPost","addPost","MyPostsContainer","profilePage","newPostText","dispatch","Profile","ProfileContainer","userId","match","params","authorizedUserID","history","push","getUserProfile","getStatus","compose","id","userIsAuth","withRouter"],"mappings":"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","file":"static/js/3.9c1e76cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state)=>{\n    return{isAuth : state.auth.isAuth}\n}\n\nexport const withAuthRedirect = (Component)=>{\n    class RedirectComponent extends React.Component{\n        render(){\n            if (! this.props.isAuth) {return <Redirect to={'/login'}/>};\n            return <Component {...this.props} />\n        }\n    }\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return connectedRedirectComponent ;   \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMOde] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(()=>{setStatus(props.status)} , [props.status]);\n\n    let activateEditMode=()=>{setEditMOde(true);}\n\n    let deactivateEditMode=()=>{ setEditMOde(false); props.updateStatus(status)}\n\n    let onStatusChange=(e)=>{\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}> {props.status} </span>\n                </div>}\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\n                        \n                        value={status} />\n                </div>}\n        </div>\n    )\n\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../common/Preloader/Preloader';\nimport styles from './Profile.module.css';\n// import ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\n\n\nconst ProfileInfo = (props)=>{\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    return(\n    <div>\n        <img src={props.profile.photos.large} alt=''/>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n        AVATAR + DESCRIPTION\n    </div>);\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport styles from './Post.module.css';\n\nconst Post=(props)=>{\n    return (\n    <div className={styles.item}>\n        <img className={styles.avatar} src='' alt=\"Аватар\"></img>\n        {props.text}\n    </div>);\n}\n\nexport default Post;","import React from 'react';\nimport styles from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {reduxForm, Field} from 'redux-form';\nimport { maxLengthCreator, textRequired } from '../../utils/validator';\nimport { SuperText } from '../../common/supertext/supertext';\n\nconst MyPosts = (props)=>{\n    let postElements = props.posts.map(post=><Post text={post.text}/> );\n\n    let addNewPost=(e)=>{\n      props.addNewPost(e.addPost);\n    }\n    return(\n      <div>\n       <AddNewPostFormRedux onSubmit={addNewPost}/>\n        <div>\n          {postElements}\n        </div>\n      </div>);\n}\nconst maxLength =maxLengthCreator(10);\nconst AddNewPostForm = (props) => {\n \n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field component={SuperText} name='addPost' placeholder='Введите сообщение'\n            validate={[textRequired, maxLength]}/>\n      <button> Отправить </button>\n    </form>\n  )\n}\nconst AddNewPostFormRedux = reduxForm({form : \"addPostForm\",})(AddNewPostForm);\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addNewPost } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\n\n\nlet mapStateToProps = (state)=>{\n    return{\n        posts : state.profilePage.posts,\n        newPostText : state.profilePage.newPostText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        addNewPost : (text)=>{\n            dispatch(addNewPost(text));\n        },     \n    }\n\n}\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPosts.container';\n\n\n\nconst Profile = (props)=>{\n    return(      \n    <div>\n        <ProfileInfo profile={props.profile} status={props.status} \n                                             updateStatus={props.updateStatus}/>\n        <MyPostsContainer />\n    </div>);\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profileReducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount (){\n        let userId = this.props.match.params.userId;\n        if (!userId) { userId = this.props.authorizedUserID}\n        if (!userId) { this.props.history.push(\"/login\")}\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render(){\n        return (<Profile {...this.props} profile={this.props.profile} \n                                         status={this.props.status}\n                                         updateStatus={this.props.updateStatus}/>);\n    }\n}\n\nlet mapStateToProps =(state) =>{\n    return{profile : state.profilePage.profile,\n           status : state.profilePage.status,\n           authorizedUserID : state.auth.id,\n           userIsAuth : state.auth.isAuth,\n    };\n}\n\nexport default  compose (connect (mapStateToProps,{getUserProfile,getStatus, updateStatus}), withRouter,\n                                                                     withAuthRedirect) \n                                                                    (ProfileContainer)"],"sourceRoot":""}
{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs.container.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","styles","dialog","id","name","Message","message","text","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","SuperText","placeholder","validate","textRequired","Dialogs","messagesElements","messages","map","dialogElements","dialogs","dialogsItems","e","sendMessage","MessageText","compose","dialogsPage","newMessageText","dispatch","newMessageBody"],"mappings":"6OAIIA,EAA6B,SAACC,GAC9B,MAAM,CAACC,OAASD,EAAME,KAAKD,SAGlBE,EAAmB,SAACC,GAAa,IACpCC,EADmC,uKAGjC,OAAMC,KAAKC,MAAMN,OACV,kBAACG,EAAcE,KAAKC,OADM,kBAAC,IAAD,CAAUC,GAAI,eAHd,GACTC,IAAML,WAOtC,OADiCM,YAAQX,EAARW,CAAoCL,K,oBCdzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,wHCUnKC,EAPG,SAACN,GACjB,OACE,yBAAKO,UAAWC,IAAOC,QACrB,kBAAC,IAAD,CAASR,GAAI,YAAcD,EAAMU,IAAjC,IAAuCV,EAAMW,KAA7C,OCCSC,EAJC,SAACZ,GACb,OAAO,yBAAKO,UAAWC,IAAOK,SAAvB,IAAkCb,EAAMc,KAAxC,M,kCC0BLC,EAAUC,YAAiB,IAa3BC,EAAsBC,YAAU,CAACC,KAAO,wBAAlBD,EAXL,SAAClB,GACtB,OAAO,0BAAMoB,SAAUpB,EAAMqB,cACrB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAWb,KAAK,cAAcc,YAAY,oGAC5DC,SAAU,CAACC,IAAaZ,MAE1B,gGAOKa,EApCC,SAAC5B,GACf,IAAI6B,EAAkB7B,EAAM8B,SAASC,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASC,KAAMD,EAAQC,UACvEkB,EAAiBhC,EAAMiC,QAAQF,KAAI,SAAAtB,GAAM,OAAI,kBAAC,EAAD,CAAYE,KAAMF,EAAOE,KAAMD,GAAID,EAAOC,QAM1F,OACE,yBAAKH,UAAWC,IAAOyB,SACvB,yBAAK1B,UAAWC,IAAO0B,cACrBF,GAEH,yBAAKzB,UAAWC,IAAOsB,UACvB,kBAACb,EAAD,CAAqBG,SAVH,SAACe,GACnBnC,EAAMoC,YAAYD,EAAEE,gBAUlBR,KCFUS,sBAASnC,aAjBH,SAACV,GACnB,MAAO,CACHqC,SAAWrC,EAAM8C,YAAYT,SAC7BG,QAAUxC,EAAM8C,YAAYN,QAC5BO,eAAiB/C,EAAM8C,YAAYC,mBAIlB,SAACC,GACtB,MAAO,CACHL,YAAc,SAACM,GACXD,EAASL,YAAYM,SAMwC9C,IAAzD0C,CACyDV","file":"static/js/4.672168ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state)=>{\n    return{isAuth : state.auth.isAuth}\n}\n\nexport const withAuthRedirect = (Component)=>{\n    class RedirectComponent extends React.Component{\n        render(){\n            if (! this.props.isAuth) {return <Redirect to={'/login'}/>};\n            return <Component {...this.props} />\n        }\n    }\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return connectedRedirectComponent ;   \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './../Dialogs.module.css'\n\nconst DialogItem =(props)=>{\n  return (\n    <div className={styles.dialog}>\n      <NavLink to={\"/dialogs/\" + props.id}> {props.name} </NavLink>\n    </div>);\n};\n\nexport default DialogItem;","import React from 'react';\nimport styles from './../Dialogs.module.css'\n\n\nconst Message = (props)=>{\n    return <div className={styles.message}> {props.text} </div>\n}\n\nexport default Message;\n\n","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator,textRequired} from '../utils/validator';\nimport { SuperText } from '../common/supertext/supertext';\n// import addMessageForm from './addMessageForm';\n\n\nconst Dialogs = (props)=>{\n  let messagesElements =props.messages.map(message => <Message text={message.text} /> );\n  let dialogElements = props.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} /> );\n    \n  let addNewMessage = (e)=>{\n    props.sendMessage(e.MessageText);\n  }\n\n   return(\n     <div className={styles.dialogs}>\n     <div className={styles.dialogsItems}>\n      {dialogElements}\n    </div>\n    <div className={styles.messages}>\n    <AddMessageFormRedux onSubmit={addNewMessage}/>\n     {messagesElements}\n   </div> \n   </div>\n     );\n}\n\nconst maxLength=maxLengthCreator(20);\n\nconst AddMessageForm = (props) => {\n  return(<form onSubmit={props.handleSubmit}>\n          <div>\n            <Field component={SuperText} name='MessageText' placeholder='Введите сообщение'\n            validate={[textRequired,maxLength ]}/>\n            </div> \n          <button> Отправить </button>\n      </form>\n  )    \n}\n\nconst AddMessageFormRedux = reduxForm({form : \"dialogAddMessageForm\",})(AddMessageForm);\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { sendMessage} from '../../redux/dialogsReducer';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) =>{\n    return {\n        messages : state.dialogsPage.messages,\n        dialogs : state.dialogsPage.dialogs,\n        newMessageText : state.dialogsPage.newMessageText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch)=>{\n    return {\n        sendMessage : (newMessageBody)=>{\n            dispatch(sendMessage(newMessageBody));\n        },\n    }\n}\n\n\nexport default  compose (connect (mapStateToProps, mapDispatchToProps),  withAuthRedirect) \n                                                                        (Dialogs)"],"sourceRoot":""}